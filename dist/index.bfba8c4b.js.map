{"mappings":"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","sources":["work8/script.js"],"sourcesContent":["// 360도 이미지 보기 기능 만들기\r\nconst make360Viewer = ($target) => {\r\n    // 필요한 변수들 선언\r\n    let isDragging = false;  // 드래그 중인지 체크\r\n    let dragStartX = 0;      // 드래그 시작한 x좌표\r\n    let beforeSection = parseInt($target.style.getPropertyValue('--current-section')) || 0; // 이전 섹션값\r\n    \r\n    // 드래그 영역 계산하기\r\n    const frameCount = parseInt($target.dataset.viewerNum);  \r\n    const containerWidth = $target.clientWidth;              // 컨테이너 너비\r\n    const oneSection = containerWidth / frameCount;          // 한 섹션당 너비\r\n    \r\n    \r\n    // 드래그할 때 섹션 업데이트하기\r\n    function updateFrame(moveDistance) {\r\n        // 원래 섹션 값 구하기\r\n        const tempSection = Math.floor(Math.abs(moveDistance) / oneSection);\r\n        \r\n        // 현재 섹션 계산하기\r\n        let nowSection;\r\n        function mod(n, m) {\r\n            return ((n % m) + m) % m;\r\n        }\r\n        if (moveDistance < 0) {\r\n            nowSection = mod((beforeSection + tempSection), frameCount);\r\n        } else {\r\n            nowSection = mod((beforeSection - tempSection), frameCount);\r\n        }\r\n        \r\n        console.log('드래그 중>', {\r\n            움직인거리: moveDistance,\r\n            임시섹션: tempSection,\r\n            현재섹션: nowSection,\r\n            이전섹션: beforeSection\r\n        });\r\n        \r\n        // CSS 변수 업데이트\r\n        $target.style.setProperty('--current-section', nowSection);\r\n    }\r\n    \r\n    // 마우스 이벤트\r\n    function mouseStart(e) {\r\n        isDragging = true;\r\n        dragStartX = e.clientX;\r\n        console.log('마우스 시작! x좌표:', dragStartX, '이전섹션:', beforeSection);\r\n    }\r\n    \r\n    function mouseMove(e) {\r\n        if (!isDragging) return;\r\n        \r\n        const nowX = e.clientX;\r\n        const moveDistance = nowX - dragStartX;\r\n        updateFrame(moveDistance);\r\n    }\r\n    \r\n    // 터치 이벤트\r\n    function touchStart(e) {\r\n        isDragging = true;\r\n        dragStartX = e.touches[0].clientX;\r\n        console.log('터치 시작! x좌표:', dragStartX, '이전섹션:', beforeSection);\r\n    }\r\n    \r\n    function touchMove(e) {\r\n        if (!isDragging) return;\r\n        e.preventDefault();  // 스크롤 막기\r\n        \r\n        const nowX = e.touches[0].clientX;\r\n        const moveDistance = nowX - dragStartX;\r\n        updateFrame(moveDistance);\r\n    }\r\n    \r\n    // 드래그 끝났을 때\r\n    function dragEnd() {\r\n        if (!isDragging) return;\r\n        \r\n        isDragging = false;\r\n        beforeSection = parseInt($target.style.getPropertyValue('--current-section')) || 0;\r\n        console.log('끝! 마지막섹션:', beforeSection);\r\n    }\r\n    \r\n    // 이벤트 달기\r\n    function addEvents() {\r\n        $target.addEventListener('mousedown', mouseStart);\r\n        $target.addEventListener('touchstart', touchStart, { passive: false });\r\n        window.addEventListener('mousemove', mouseMove);\r\n        window.addEventListener('touchmove', touchMove, { passive: false });\r\n        window.addEventListener('mouseup', dragEnd);\r\n        window.addEventListener('touchend', dragEnd);\r\n        window.addEventListener('mouseleave', dragEnd);\r\n    }\r\n    \r\n    // 이벤트 제거하기\r\n    function removeEvents() {\r\n        $target.removeEventListener('mousedown', mouseStart);\r\n        $target.removeEventListener('touchstart', touchStart, { passive: false });\r\n        window.removeEventListener('mousemove', mouseMove);\r\n        window.removeEventListener('touchmove', touchMove, { passive: false });\r\n        window.removeEventListener('mouseup', dragEnd);\r\n        window.removeEventListener('touchend', dragEnd);\r\n        window.removeEventListener('mouseleave', dragEnd);\r\n    }\r\n    \r\n    // 시작할 때 이벤트 달기\r\n    addEvents();\r\n    \r\n    // 나중에 이벤트 제거할 수 있게 함수 돌려주기\r\n    return removeEvents;\r\n}\r\n\r\n// 페이지 시작하면 실행할 함수\r\nconst start360Viewer = () => {\r\n    const $viewers = document.querySelectorAll(\"[data-product-viewer]\");\r\n    const cleanups = [];\r\n\r\n    $viewers.forEach(($viewer) => {\r\n        const frameCount = parseInt($viewer.dataset.viewerNum);\r\n        const frameCountPad = parseInt($viewer.dataset.viewerNumPad);\r\n        const baseImageUrl = $viewer.dataset.viewerImage;\r\n        const extension = $viewer.dataset.viewerImageExtension;\r\n        const productImage = $viewer.querySelector('[data-product-images]');\r\n\r\n        // 초기 상태에서 이미지 컨테이너 숨기기\r\n        productImage.style.display = 'none';\r\n\r\n        // 로딩 상태 표시\r\n        const loadingDiv = document.createElement('div');\r\n        loadingDiv.textContent = 'Loading images...';\r\n        loadingDiv.className = 'viewer-loading';\r\n        loadingDiv.style.position = 'absolute';\r\n        loadingDiv.style.top = '50%';\r\n        loadingDiv.style.left = '50%';\r\n        loadingDiv.style.transform = 'translate(-50%, -50%)';\r\n        $viewer.appendChild(loadingDiv);\r\n\r\n        // 이미지 프리로드 Promise 배열 생성\r\n        const imagePromises = [];\r\n\r\n        for (let i = 1; i <= frameCount; i++) {\r\n            const frameNum = String(i).padStart(frameCountPad, '0');\r\n            const img = document.createElement('img');\r\n            \r\n            const imageLoadPromise = new Promise((resolve, reject) => {\r\n                img.onload = () => {\r\n                    img.alt = ``;\r\n                    img.dataset.frame = frameNum;\r\n                    productImage.appendChild(img);\r\n                    resolve();\r\n                };\r\n                img.onerror = () => reject(`Failed to load image ${frameNum}`);\r\n            });\r\n\r\n            img.src = `${baseImageUrl}${frameNum}.${extension}`;\r\n            imagePromises.push(imageLoadPromise);\r\n        }\r\n\r\n        // 모든 이미지가 로드되면 360도 뷰어 초기화\r\n        Promise.all(imagePromises)\r\n            .then(() => {\r\n                // 로딩 표시 제거\r\n                loadingDiv.remove();\r\n                \r\n                // 이미지 컨테이너 표시 및 로딩 완료 클래스 추가\r\n                productImage.style.display = '';\r\n                $viewer.classList.add('viewer-loaded');\r\n\r\n                // CSS 변수 설정\r\n                $viewer.style.setProperty('--move-value', 100/frameCount + '%');\r\n                $viewer.style.setProperty('--move', '0');\r\n                $viewer.style.setProperty('--current-section', '0');\r\n                $viewer.style.setProperty('--view-num', frameCount);\r\n\r\n                // 360 기능 적용\r\n                const cleanup = make360Viewer($viewer);\r\n                cleanups.push(cleanup);\r\n                \r\n                console.log('뷰어 설정 완료!', $viewer, '프레임:', frameCount);\r\n            })\r\n            .catch(error => {\r\n                console.error('이미지 로드 중 오류 발생:', error);\r\n                loadingDiv.textContent = 'Error loading images. Please try again.';\r\n                loadingDiv.classList.add('viewer-error');\r\n            });\r\n    });\r\n\r\n    // 화면 크기 바뀔 때 처리\r\n    let resizeTimer;\r\n    window.addEventListener('resize', () => {\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(() => {\r\n            console.log('화면 크기 바뀜! 다시 설정하기');\r\n            \r\n            cleanups.forEach(cleanup => cleanup());\r\n            cleanups.length = 0;\r\n            \r\n            $viewers.forEach(($viewer) => {\r\n                const cleanup = make360Viewer($viewer);\r\n                cleanups.push(cleanup);\r\n            });\r\n        }, 150);\r\n    });\r\n}\r\n\r\n// 페이지 로드되면 시작!\r\nwindow.addEventListener('load', start360Viewer);"],"names":[],"version":3,"file":"index.bfba8c4b.js.map","sourceRoot":"/__parcel_source_root/"}