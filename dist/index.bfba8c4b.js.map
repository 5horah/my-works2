{"mappings":"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","sources":["work8/script.js"],"sourcesContent":["const viewerStates = new Map();\r\n\r\nconst make360Viewer = ($target) => {\r\n    // 상태 관리를 위한 변수들\r\n    let isDragging = false;     \r\n    let dragStartX = 0;         \r\n    let currentFrame = 0;       \r\n    let beforeSection = 0;      \r\n    let canvas = null;          \r\n    let ctx = null;            \r\n    const images = [];          \r\n    const frameCount = parseInt($target.dataset.viewerNum);\r\n\r\n    function renderFrame() {\r\n        // Check if context exists\r\n        if (!ctx || !images[currentFrame]) return;\r\n        \r\n        const img = images[currentFrame];\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        const backgroundColor = getComputedStyle($target).getPropertyValue('--viewer-background').trim();\r\n        ctx.fillStyle = backgroundColor || '#ffffff';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        const scale = Math.min(\r\n            canvas.width / img.height,\r\n            canvas.height / img.width\r\n        );\r\n        \r\n        const x = (canvas.width - img.width * scale) / 2;\r\n        const y = (canvas.height - img.height * scale) / 2;\r\n        \r\n        ctx.drawImage(img, x, y, img.width * scale, img.height * scale);\r\n    }\r\n\r\n    function setupCanvas() {\r\n        if (!canvas) return;\r\n        \r\n        const rect = $target.getBoundingClientRect();\r\n        canvas.width = rect.width || 300;\r\n        canvas.height = rect.height || 300;\r\n        ctx = canvas.getContext('2d', { alpha: false });\r\n        ctx.imageSmoothingEnabled = true;\r\n    }\r\n\r\n    async function loadImages() {\r\n        await setupCanvas();\r\n        const frameCountPad = parseInt($target.dataset.viewerNumPad);\r\n        const baseImageUrl = $target.dataset.viewerImage;\r\n        const extension = $target.dataset.viewerImageExtension;\r\n    \r\n        // Create loading UI outside canvas\r\n        const loadingDiv = document.createElement('div');\r\n        loadingDiv.className = 'viewer-loading';\r\n        loadingDiv.textContent = 'Loading images...';\r\n        $target.insertBefore(loadingDiv, canvas);\r\n    \r\n        // Hide canvas during loading\r\n        canvas.style.visibility = 'hidden';\r\n    \r\n        try {\r\n            const imageBuffer = new Array(frameCount);\r\n            const promises = Array.from({ length: frameCount }, (_, i) => {\r\n                return new Promise((resolve, reject) => {\r\n                    const img = new Image();\r\n                    const paddedIndex = String(i + 1).padStart(frameCountPad, '0');\r\n                    const imageUrl = `${baseImageUrl}${paddedIndex}.${extension}`;\r\n                    \r\n                    img.onload = () => {\r\n                        imageBuffer[i] = img;\r\n                        loadingDiv.textContent = `Loading... ${Math.round(((i + 1)/frameCount) * 100)}%`;\r\n                        resolve();\r\n                    };\r\n                    \r\n                    img.onerror = (error) => reject(new Error(`Failed to load image: ${imageUrl}`));\r\n                    img.src = imageUrl;\r\n                });\r\n            });\r\n    \r\n            await Promise.all(promises);\r\n            // Copy buffer to images array at once\r\n            images.splice(0, images.length, ...imageBuffer);\r\n            \r\n            loadingDiv.remove();\r\n            canvas.style.visibility = 'visible';\r\n            \r\n            if (ctx) {\r\n                renderFrame();\r\n            }\r\n        } catch (error) {\r\n            console.error('Image loading failed:', error);\r\n            loadingDiv.textContent = 'Failed to load images';\r\n        }\r\n    }\r\n\r\n    function updateFrame(moveDistance) {\r\n        // 원래 섹션 값 구하기\r\n        const oneSection = canvas.width / frameCount;\r\n        const tempSection = Math.floor(Math.abs(moveDistance) / oneSection);\r\n        \r\n        // 현재 섹션 계산\r\n        const nowSection = moveDistance < 0 \r\n            ? ((beforeSection + tempSection) % frameCount + frameCount) % frameCount\r\n            : ((beforeSection - tempSection) % frameCount + frameCount) % frameCount;\r\n        \r\n        if (currentFrame !== nowSection) {\r\n            currentFrame = nowSection;\r\n            renderFrame();\r\n        }\r\n\r\n        console.log('드래그 중>', {\r\n            움직인거리: moveDistance,\r\n            임시섹션: tempSection,\r\n            현재섹션: nowSection,\r\n            이전섹션: beforeSection\r\n        });\r\n    }\r\n    \r\n    // 마우스 이벤트 핸들러\r\n    function mouseStart(e) {\r\n        isDragging = true;\r\n        dragStartX = e.clientX;\r\n        console.log('마우스 시작! x좌표:', dragStartX, '이전섹션:', beforeSection);\r\n    }\r\n    \r\n    function mouseMove(e) {\r\n        if (!isDragging) return;\r\n        const moveDistance = e.clientX - dragStartX;\r\n        updateFrame(moveDistance);\r\n    }\r\n    \r\n    // 터치 이벤트 핸들러\r\n    function touchStart(e) {\r\n        isDragging = true;\r\n        dragStartX = e.touches[0].clientX;\r\n        console.log('마우스 시작! x좌표:', dragStartX, '이전섹션:', beforeSection);\r\n    }\r\n    \r\n    function touchMove(e) {\r\n        if (!isDragging) return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const moveDistance = e.touches[0].clientX - dragStartX;\r\n        updateFrame(moveDistance);\r\n    }\r\n    \r\n    function dragEnd() {\r\n        if (!isDragging) return;\r\n        isDragging = false;\r\n        beforeSection = currentFrame;\r\n        console.log('끝! 마지막섹션:', beforeSection);\r\n    }\r\n    \r\n    function addEvents() {\r\n        canvas.addEventListener('mousedown', mouseStart);\r\n        canvas.addEventListener('touchstart', touchStart, { passive: false });\r\n        window.addEventListener('mousemove', mouseMove);\r\n        window.addEventListener('touchmove', touchMove, { passive: false });\r\n        window.addEventListener('mouseup', dragEnd);\r\n        window.addEventListener('touchend', dragEnd);\r\n        window.addEventListener('mouseleave', dragEnd);\r\n    }\r\n    \r\n    function removeEvents() {\r\n        canvas.removeEventListener('mousedown', mouseStart);\r\n        canvas.removeEventListener('touchstart', touchStart);\r\n        window.removeEventListener('mousemove', mouseMove);\r\n        window.removeEventListener('touchmove', touchMove);\r\n        window.removeEventListener('mouseup', dragEnd);\r\n        window.removeEventListener('touchend', dragEnd);\r\n        window.removeEventListener('mouseleave', dragEnd);\r\n    }\r\n    \r\n    // 초기화\r\n    function init() {\r\n        $target.innerHTML = '';\r\n        canvas = document.createElement('canvas');\r\n        $target.appendChild(canvas);\r\n        \r\n        setupCanvas();\r\n        loadImages().catch(console.error);\r\n        addEvents();\r\n        \r\n        // Store cleanup function\r\n        $target._viewer = {\r\n            renderFrame,\r\n            cleanup: () => {\r\n                removeEvents();\r\n                viewerStates.delete($target);\r\n            }\r\n        };\r\n    }\r\n    \r\n    init();\r\n    return removeEvents;\r\n};\r\n\r\n// 360도 뷰어 시작\r\nconst start360Viewer = () => {\r\n    const $viewers = document.querySelectorAll(\"[data-product-viewer]\");\r\n    $viewers.forEach($viewer => make360Viewer($viewer));\r\n};\r\n\r\n// 탭 기능 만들기\r\nconst makeTabComponent = ($container) => {\r\n    // 필요한 변수들 선언\r\n    const events = new Map();  // 이벤트 모아두기\r\n    \r\n    // 탭 요소들 찾기\r\n    const $tabButtons = $container.querySelectorAll('[data-tab-button]');\r\n    const $tabContents = $container.querySelectorAll('[data-tab-content]');\r\n    \r\n    // 시작할 때 활성화할 탭 찾기\r\n    function getStartTab() {      \r\n        return $container.getAttribute('data-active-tab') || '0';\r\n    }\r\n    \r\n    // 탭 상태 업데이트하기\r\n    function updateTab(selectedId) {\r\n        // 버튼들 상태 변경\r\n        $tabButtons.forEach(($button) => {\r\n            const isActive = $button.getAttribute('data-tab-button') === selectedId;\r\n            $button.setAttribute('aria-selected', isActive.toString());\r\n            $button.setAttribute('data-active', isActive.toString());\r\n        });\r\n        \r\n        // 내용들 상태 변경\r\n        $tabContents.forEach(($content) => {\r\n            const isActive = $content.getAttribute('data-tab-content') === selectedId;\r\n            $content.setAttribute('data-active', isActive.toString());\r\n        });\r\n        \r\n        // 컨테이너에도 현재 탭 표시\r\n        $container.setAttribute('data-active-tab', selectedId);\r\n    }\r\n        \r\n    \r\n    // 처음 시작할 때 설정하기\r\n    function setup() {\r\n        // 기본 상태 설정\r\n        updateTab(getStartTab());\r\n        \r\n        // 접근성 속성 추가\r\n        $container.setAttribute('role', 'tablist');\r\n        $tabButtons.forEach(($button) => {\r\n            $button.setAttribute('role', 'tab');\r\n            $button.setAttribute('aria-selected', 'false');\r\n        });\r\n        $tabContents.forEach(($content) => {\r\n            $content.setAttribute('role', 'tabpanel');\r\n        });\r\n        \r\n        // 탭 버튼 클릭 이벤트\r\n        $tabButtons.forEach(($button) => {\r\n            const clickHandler = () => {\r\n                const index = $button.getAttribute('data-tab-button');\r\n                updateTab(index);\r\n                if ($button.id) {\r\n                    history.replaceState(null, '', `#${$button.id}`);\r\n                }\r\n\r\n            };\r\n            \r\n            $button.addEventListener('click', clickHandler);\r\n            events.set($button, clickHandler);\r\n        });\r\n        \r\n    }\r\n    \r\n    // 정리하기\r\n    function cleanup() {\r\n        \r\n        // 이벤트 정리\r\n        events.forEach((handler, element) => {\r\n            element.removeEventListener('click', handler);\r\n        });\r\n        events.clear();\r\n    }\r\n    \r\n    // 시작!\r\n    setup();\r\n    \r\n    // 정리하는 함수 돌려주기\r\n    return cleanup;\r\n}\r\n\r\n// 페이지에서 탭 시작하기\r\nconst startTabs = () => {\r\n    // 이전에 있던 탭 정리하기\r\n    if (window.tabCleanups) {\r\n        window.tabCleanups.forEach(cleanup => cleanup());\r\n    }\r\n    \r\n    // 탭 컨테이너 찾아서 새로 시작하기\r\n    const $containers = document.querySelectorAll('[data-tab-container]');\r\n    const cleanups = Array.from($containers).map(\r\n        ($container) => makeTabComponent($container)\r\n    );\r\n    \r\n    // 나중에 정리할 수 있게 저장해두기\r\n    window.tabCleanups = cleanups;\r\n    return cleanups;\r\n\r\n};\r\n\r\n// 페이지 로드되면 시작!\r\nwindow.addEventListener('load', () => {\r\n    startTabs();\r\n    start360Viewer();\r\n    \r\n    // 탭 버튼에 360 뷰어 재시작 이벤트 추가\r\n    document.querySelectorAll('[data-tab-button]').forEach(button => {\r\n        button.addEventListener('click', () => {\r\n            start360Viewer();\r\n        });\r\n    });\r\n});"],"names":[],"version":3,"file":"index.bfba8c4b.js.map","sourceRoot":"/__parcel_source_root/"}