{"version":3,"sources":["script.js"],"names":["make360Viewer","$target","isDragging","dragStartX","beforeSection","parseInt","style","getPropertyValue","frameCount","dataset","viewerNum","containerWidth","clientWidth","oneSection","updateFrame","moveDistance","tempSection","Math","floor","abs","nowSection","console","log","움직인거리","임시섹션","현재섹션","이전섹션","setProperty","mouseStart","e","clientX","mouseMove","nowX","touchStart","touches","touchMove","preventDefault","dragEnd","addEvents","addEventListener","passive","window","removeEvents","removeEventListener","start360Viewer","$viewers","document","querySelectorAll","cleanups","forEach","$viewer","cleanup","push","resizeTimer","clearTimeout","setTimeout","length"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..\\work7","sourcesContent":["// 360도 이미지 보기 기능 만들기\r\nconst make360Viewer = ($target) => {\r\n    // 필요한 변수들 선언\r\n    let isDragging = false;  // 드래그 중인지 체크\r\n    let dragStartX = 0;      // 드래그 시작한 x좌표\r\n    let beforeSection = parseInt($target.style.getPropertyValue('--current-section')) || 0; // 이전 섹션값\r\n    \r\n    // 드래그 영역 계산하기\r\n    const frameCount = parseInt($target.dataset.viewerNum);  \r\n    const containerWidth = $target.clientWidth;              // 컨테이너 너비\r\n    const oneSection = containerWidth / frameCount;          // 한 섹션당 너비\r\n    \r\n    \r\n    // 드래그할 때 섹션 업데이트하기\r\n    function updateFrame(moveDistance) {\r\n        // 원래 섹션 값 구하기\r\n        const tempSection = Math.floor(Math.abs(moveDistance) / oneSection);\r\n        \r\n        // 현재 섹션 계산하기\r\n        let nowSection;\r\n        if (moveDistance < 0) {\r\n            // 오른쪽으로 드래그\r\n            nowSection = ((beforeSection + tempSection) + frameCount) % frameCount;\r\n        } else {\r\n            // 왼쪽으로 드래그\r\n            nowSection = ((beforeSection - tempSection) + frameCount) % frameCount;\r\n        }\r\n        \r\n        console.log('드래그 중>', {\r\n            움직인거리: moveDistance,\r\n            임시섹션: tempSection,\r\n            현재섹션: nowSection,\r\n            이전섹션: beforeSection\r\n        });\r\n        \r\n        // CSS 변수 업데이트\r\n        $target.style.setProperty('--current-section', nowSection);\r\n    }\r\n    \r\n    // 마우스 이벤트\r\n    function mouseStart(e) {\r\n        isDragging = true;\r\n        dragStartX = e.clientX;\r\n        console.log('마우스 시작! x좌표:', dragStartX, '이전섹션:', beforeSection);\r\n    }\r\n    \r\n    function mouseMove(e) {\r\n        if (!isDragging) return;\r\n        \r\n        const nowX = e.clientX;\r\n        const moveDistance = nowX - dragStartX;\r\n        updateFrame(moveDistance);\r\n    }\r\n    \r\n    // 터치 이벤트\r\n    function touchStart(e) {\r\n        isDragging = true;\r\n        dragStartX = e.touches[0].clientX;\r\n        console.log('터치 시작! x좌표:', dragStartX, '이전섹션:', beforeSection);\r\n    }\r\n    \r\n    function touchMove(e) {\r\n        if (!isDragging) return;\r\n        e.preventDefault();  // 스크롤 막기\r\n        \r\n        const nowX = e.touches[0].clientX;\r\n        const moveDistance = nowX - dragStartX;\r\n        updateFrame(moveDistance);\r\n    }\r\n    \r\n    // 드래그 끝났을 때\r\n    function dragEnd() {\r\n        if (!isDragging) return;\r\n        \r\n        isDragging = false;\r\n        beforeSection = parseInt($target.style.getPropertyValue('--current-section')) || 0;\r\n        console.log('끝! 마지막섹션:', beforeSection);\r\n    }\r\n    \r\n    // 이벤트 달기\r\n    function addEvents() {\r\n        $target.addEventListener('mousedown', mouseStart);\r\n        $target.addEventListener('touchstart', touchStart, { passive: false });\r\n        window.addEventListener('mousemove', mouseMove);\r\n        window.addEventListener('touchmove', touchMove, { passive: false });\r\n        window.addEventListener('mouseup', dragEnd);\r\n        window.addEventListener('touchend', dragEnd);\r\n        window.addEventListener('mouseleave', dragEnd);\r\n    }\r\n    \r\n    // 이벤트 제거하기\r\n    function removeEvents() {\r\n        $target.removeEventListener('mousedown', mouseStart);\r\n        $target.removeEventListener('touchstart', touchStart, { passive: false });\r\n        window.removeEventListener('mousemove', mouseMove);\r\n        window.removeEventListener('touchmove', touchMove, { passive: false });\r\n        window.removeEventListener('mouseup', dragEnd);\r\n        window.removeEventListener('touchend', dragEnd);\r\n        window.removeEventListener('mouseleave', dragEnd);\r\n    }\r\n    \r\n    // 시작할 때 이벤트 달기\r\n    addEvents();\r\n    \r\n    // 나중에 이벤트 제거할 수 있게 함수 돌려주기\r\n    return removeEvents;\r\n}\r\n\r\n// 페이지 시작하면 실행할 함수\r\nconst start360Viewer = () => {\r\n    // data-product-viewer 있는거 전부 찾기\r\n    const $viewers = document.querySelectorAll(\"[data-product-viewer]\");\r\n    const cleanups = [];  // 이벤트 제거 함수 모아두기\r\n\r\n    // 찾은거 하나씩 처리하기\r\n    $viewers.forEach(($viewer) => {\r\n        const frameCount = parseInt($viewer.dataset.viewerNum);\r\n        \r\n        // CSS 변수 설정\r\n        $viewer.style.setProperty('--move-value', 100/frameCount + '%');\r\n        $viewer.style.setProperty('--move', '0');\r\n        $viewer.style.setProperty('--current-section', '0');\r\n        $viewer.style.setProperty('--view-num', frameCount);\r\n        \r\n        // 360 기능 적용하고 이벤트 제거 함수 저장\r\n        const cleanup = make360Viewer($viewer);\r\n        cleanups.push(cleanup);\r\n        \r\n        console.log('뷰어 설정 완료!', $viewer, '프레임:', frameCount);\r\n    });\r\n\r\n    // 화면 크기 바뀔 때 처리\r\n    let resizeTimer;\r\n    window.addEventListener('resize', () => {\r\n        // 화면 바뀔때마다 실행하면 버벅이니까 좀 기다렸다가 한번만 실행\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(() => {\r\n            console.log('화면 크기 바뀜! 다시 설정하기');\r\n            \r\n            // 이벤트 다 제거하고\r\n            cleanups.forEach(cleanup => cleanup());\r\n            cleanups.length = 0;\r\n            \r\n            // 다시 설정하기\r\n            $viewers.forEach(($viewer) => {\r\n                const cleanup = make360Viewer($viewer);\r\n                cleanups.push(cleanup);\r\n            });\r\n        }, 150);  // 0.15초 기다렸다가 실행\r\n    });\r\n}\r\n\r\n// 페이지 로드되면 시작!\r\nwindow.addEventListener('load', start360Viewer);"]}