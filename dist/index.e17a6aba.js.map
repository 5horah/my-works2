{"mappings":"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","sources":["work6/script.js"],"sourcesContent":["// 360도 이미지 보기 기능 만들기\r\nconst make360Viewer = ($target) => {\r\n    // 필요한 변수들 선언\r\n    let isDragging = false;  // 드래그 중인지 체크\r\n    let dragStartX = 0;      // 드래그 시작한 x좌표\r\n    let beforeSection = parseInt($target.style.getPropertyValue('--current-section')) || 0; // 이전 섹션값\r\n    \r\n    // 드래그 영역 계산하기\r\n    const frameCount = parseInt($target.dataset.viewerNum);  \r\n    const containerWidth = $target.clientWidth;              // 컨테이너 너비\r\n    const oneSection = containerWidth / frameCount;          // 한 섹션당 너비\r\n    \r\n    \r\n    // 드래그할 때 섹션 업데이트하기\r\n    function updateFrame(moveDistance) {\r\n        // 원래 섹션 값 구하기\r\n        const tempSection = Math.floor(Math.abs(moveDistance) / oneSection);\r\n        \r\n        // 현재 섹션 계산하기\r\n        let nowSection;\r\n        function mod(n, m) {\r\n            return ((n % m) + m) % m;\r\n        }\r\n        if (moveDistance < 0) {\r\n            nowSection = mod((beforeSection + tempSection), frameCount);\r\n        } else {\r\n            nowSection = mod((beforeSection - tempSection), frameCount);\r\n        }\r\n        \r\n        console.log('드래그 중>', {\r\n            움직인거리: moveDistance,\r\n            임시섹션: tempSection,\r\n            현재섹션: nowSection,\r\n            이전섹션: beforeSection\r\n        });\r\n        \r\n        // CSS 변수 업데이트\r\n        $target.style.setProperty('--current-section', nowSection);\r\n    }\r\n    \r\n    // 마우스 이벤트\r\n    function mouseStart(e) {\r\n        isDragging = true;\r\n        dragStartX = e.clientX;\r\n        console.log('마우스 시작! x좌표:', dragStartX, '이전섹션:', beforeSection);\r\n    }\r\n    \r\n    function mouseMove(e) {\r\n        if (!isDragging) return;\r\n        \r\n        const nowX = e.clientX;\r\n        const moveDistance = nowX - dragStartX;\r\n        updateFrame(moveDistance);\r\n    }\r\n    \r\n    // 터치 이벤트\r\n    function touchStart(e) {\r\n        isDragging = true;\r\n        dragStartX = e.touches[0].clientX;\r\n        console.log('터치 시작! x좌표:', dragStartX, '이전섹션:', beforeSection);\r\n    }\r\n    \r\n    function touchMove(e) {\r\n        if (!isDragging) return;\r\n        e.preventDefault();  // 스크롤 막기\r\n        \r\n        const nowX = e.touches[0].clientX;\r\n        const moveDistance = nowX - dragStartX;\r\n        updateFrame(moveDistance);\r\n    }\r\n    \r\n    // 드래그 끝났을 때\r\n    function dragEnd() {\r\n        if (!isDragging) return;\r\n        \r\n        isDragging = false;\r\n        beforeSection = parseInt($target.style.getPropertyValue('--current-section')) || 0;\r\n        console.log('끝! 마지막섹션:', beforeSection);\r\n    }\r\n    \r\n    // 이벤트 달기\r\n    function addEvents() {\r\n        $target.addEventListener('mousedown', mouseStart);\r\n        $target.addEventListener('touchstart', touchStart, { passive: false });\r\n        window.addEventListener('mousemove', mouseMove);\r\n        window.addEventListener('touchmove', touchMove, { passive: false });\r\n        window.addEventListener('mouseup', dragEnd);\r\n        window.addEventListener('touchend', dragEnd);\r\n        window.addEventListener('mouseleave', dragEnd);\r\n    }\r\n    \r\n    // 이벤트 제거하기\r\n    function removeEvents() {\r\n        $target.removeEventListener('mousedown', mouseStart);\r\n        $target.removeEventListener('touchstart', touchStart, { passive: false });\r\n        window.removeEventListener('mousemove', mouseMove);\r\n        window.removeEventListener('touchmove', touchMove, { passive: false });\r\n        window.removeEventListener('mouseup', dragEnd);\r\n        window.removeEventListener('touchend', dragEnd);\r\n        window.removeEventListener('mouseleave', dragEnd);\r\n    }\r\n    \r\n    // 시작할 때 이벤트 달기\r\n    addEvents();\r\n    \r\n    // 나중에 이벤트 제거할 수 있게 함수 돌려주기\r\n    return removeEvents;\r\n}\r\n\r\n// 페이지 시작하면 실행할 함수\r\nconst start360Viewer = () => {\r\n    // data-product-viewer 있는거 전부 찾기\r\n    const $viewers = document.querySelectorAll(\"[data-product-viewer]\");\r\n    const cleanups = [];  // 이벤트 제거 함수 모아두기\r\n\r\n    // 찾은거 하나씩 처리하기\r\n    $viewers.forEach(($viewer) => {\r\n        const frameCount = parseInt($viewer.dataset.viewerNum);\r\n        \r\n        // CSS 변수 설정\r\n        $viewer.style.setProperty('--move-value', 100/frameCount + '%');\r\n        $viewer.style.setProperty('--move', '0');\r\n        $viewer.style.setProperty('--current-section', '0');\r\n        $viewer.style.setProperty('--view-num', frameCount);\r\n        \r\n        // 360 기능 적용하고 이벤트 제거 함수 저장\r\n        const cleanup = make360Viewer($viewer);\r\n        cleanups.push(cleanup);\r\n        \r\n        console.log('뷰어 설정 완료!', $viewer, '프레임:', frameCount);\r\n    });\r\n\r\n    // 화면 크기 바뀔 때 처리\r\n    let resizeTimer;\r\n    window.addEventListener('resize', () => {\r\n        // 화면 바뀔때마다 실행하면 버벅이니까 좀 기다렸다가 한번만 실행\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(() => {\r\n            console.log('화면 크기 바뀜! 다시 설정하기');\r\n            \r\n            // 이벤트 다 제거하고\r\n            cleanups.forEach(cleanup => cleanup());\r\n            cleanups.length = 0;\r\n            \r\n            // 다시 설정하기\r\n            $viewers.forEach(($viewer) => {\r\n                const cleanup = make360Viewer($viewer);\r\n                cleanups.push(cleanup);\r\n            });\r\n        }, 150);  // 0.15초 기다렸다가 실행\r\n    });\r\n}\r\n\r\n// 탭 기능 만들기\r\nconst makeTabComponent = ($container) => {\r\n    // 필요한 변수들 선언\r\n    const events = new Map();  // 이벤트 모아두기\r\n    \r\n    // 탭 요소들 찾기\r\n    const $tabButtons = $container.querySelectorAll('[data-tab-button]');\r\n    const $tabContents = $container.querySelectorAll('[data-tab-content]');\r\n    \r\n    // 시작할 때 활성화할 탭 찾기\r\n    function getStartTab() {      \r\n        return $container.getAttribute('data-active-tab') || '0';\r\n    }\r\n    \r\n    // 탭 상태 업데이트하기\r\n    function updateTab(selectedId) {\r\n        // 버튼들 상태 변경\r\n        $tabButtons.forEach(($button) => {\r\n            const isActive = $button.getAttribute('data-tab-button') === selectedId;\r\n            $button.setAttribute('aria-selected', isActive.toString());\r\n            $button.setAttribute('data-active', isActive.toString());\r\n        });\r\n        \r\n        // 내용들 상태 변경\r\n        $tabContents.forEach(($content) => {\r\n            const isActive = $content.getAttribute('data-tab-content') === selectedId;\r\n            $content.setAttribute('data-active', isActive.toString());\r\n        });\r\n        \r\n        // 컨테이너에도 현재 탭 표시\r\n        $container.setAttribute('data-active-tab', selectedId);\r\n    }\r\n        \r\n    \r\n    // 처음 시작할 때 설정하기\r\n    function setup() {\r\n        // 기본 상태 설정\r\n        updateTab(getStartTab());\r\n        \r\n        // 접근성 속성 추가\r\n        $container.setAttribute('role', 'tablist');\r\n        $tabButtons.forEach(($button) => {\r\n            $button.setAttribute('role', 'tab');\r\n            $button.setAttribute('aria-selected', 'false');\r\n        });\r\n        $tabContents.forEach(($content) => {\r\n            $content.setAttribute('role', 'tabpanel');\r\n        });\r\n        \r\n        // 탭 버튼 클릭 이벤트\r\n        $tabButtons.forEach(($button) => {\r\n            const clickHandler = () => {\r\n                const index = $button.getAttribute('data-tab-button');\r\n                updateTab(index);\r\n                if ($button.id) {\r\n                    history.replaceState(null, '', `#${$button.id}`);\r\n                }\r\n\r\n            };\r\n            \r\n            $button.addEventListener('click', clickHandler);\r\n            events.set($button, clickHandler);\r\n        });\r\n        \r\n    }\r\n    \r\n    // 정리하기\r\n    function cleanup() {\r\n        \r\n        // 이벤트 정리\r\n        events.forEach((handler, element) => {\r\n            if (element === window) {\r\n                element.removeEventListener('hashchange', handler);\r\n            } else {\r\n                element.removeEventListener('click', handler);\r\n            }\r\n        });\r\n        events.clear();\r\n    }\r\n    \r\n    // 시작!\r\n    setup();\r\n    \r\n    // 정리하는 함수 돌려주기\r\n    return cleanup;\r\n}\r\n\r\n// 페이지에서 탭 시작하기\r\nconst startTabs = () => {\r\n    // 이전에 있던 탭 정리하기\r\n    if (window.tabCleanups) {\r\n        window.tabCleanups.forEach(cleanup => cleanup());\r\n    }\r\n    \r\n    // 탭 컨테이너 찾아서 새로 시작하기\r\n    const $containers = document.querySelectorAll('[data-tab-container]');\r\n    const cleanups = Array.from($containers).map(\r\n        ($container) => makeTabComponent($container)\r\n    );\r\n    \r\n    // 나중에 정리할 수 있게 저장해두기\r\n    window.tabCleanups = cleanups;\r\n    return cleanups;\r\n\r\n};\r\n\r\n\r\n\r\nwindow.addEventListener('load', () => {\r\n    startTabs();\r\n    \r\n    start360Viewer();\r\n    \r\n    // 탭 버튼에 360 뷰어 재시작 이벤트 추가\r\n    document.querySelectorAll('[data-tab-button]').forEach(button => {\r\n        button.addEventListener('click', () => {\r\n            start360Viewer();\r\n        });\r\n    });\r\n});"],"names":[],"version":3,"file":"index.e17a6aba.js.map","sourceRoot":"/__parcel_source_root/"}